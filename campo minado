Programa 1 - prolog

Este programa deve receber como entrada um arquivo chamado mina.pl como as posições das minas em um tabuleiro e gerar a configuração do tabuleiro de jogo onde cada posição deve ter um valor associado representando o número de minas existentes nas casas adjacentes. Por exemplo, se o arquivo de entrada contiver as seguintes cláusulas:

/*mina(linha,coluna): exista mina na posição (linha,coluna)*/
mina(2,1).
mina(2,3).
mina(4,5).

a saída gerada será:

/*valor(linha,coluna,n): existem n minas adjacentes a posição (linha,coluna)*/
valor(1,1,1).
valor(1,2,2).
valor(1,3,1).
valor(1,4,1).
valor(1,5,0).

valor(2,2,2).
valor(2,4,1).
valor(2,5,0).

valor(3,1,1).
valor(3,2,2).
valor(3,3,1).
valor(3,4,2).
valor(3,5,1).

valor(4,1,0).
valor(4,2,0).
valor(4,3,0).
valor(4,4,1).

Note que as posições com mina não poderão ter nenhum número associado a sua posição.
Estas cláusulas devem ser gravadas em um arquivo ambiente.pl.
Uma vez carregado, a seguinte consulta deve ser feita para executar o programa: ?- inicio.

Programa 2 - prolog
Este programa deverá ter como entrada os arquivos mina.pl e ambiente.pl, ou seja, a configuração do tabuleiro. 
O usuário, que desconhece a configuração do tabuleiro, fará então uma jogada através de uma consulta posicao(linha,coluna), e o programa deverá apresentar o seguinte:
- "jogo encerrado": caso haja uma mina na posição (linha,coluna); 
- "n": caso existam n minas adjacentes a posição (linha,coluna);
- "0": caso não existam minas adjacentes a posição (linha,coluna). Neste caso, todas as posições adjacentes a (linha,coluna) que não contenham minas (e portanto tenham um valor associado) também devem ser mostradas ao jogador. No caso de alguma destas posições adjacentes também ter o valor 0, as suas adjacências também devem ser mostradas.
Todas as informações (cláusulas) mostradas ao jogador deverão ser guardadas em um arquivo chamado jogo.pl.

Exemplo: Considere que temos as cláusulas acima, e é feita a seguinte sequência de consultas:

?- posicao(3,1).
valor(3,1,1)

?-posicao(4,2).
valor(3,2,2)
valor(3,3,1)
valor(4,2,0)
valor(4,1,0)
valor(4,3,0)

?-posicao(2,1).
jogo encerrado

O arquivo de saida deverá ter então:

/*JOGADA 1*/
posicao(3,1).
/*AMBIENTE*/
valor(3,1,1).

/*JOGADA 2*/
posicao(4,2).
/*AMBIENTE*/
valor(3,2,2).
valor(3,3,1).
valor(4,2,0).
valor(4,1,0).
valor(4,3,0).

/*JOGADA 3*/
posicao(2,1).
/*AMBIENTE*/
jogo encerrado

Observe que na consulta "?-posicao(4,2)", não há a necessidade de repetir que a posição (3,1) tem o valor 1 pois tal informação foi fornecida no item anterior.

Programa 3 - prolog
Faça um programa que jogue o campo minado. Inicialmente, este programa deve escolher uma posição aleatória para começar o jogo. A partir da resposta obtida, o programa deverá escolher uma casa que ele julgue segura para abrir. Ele só poderá usar para tomar esta decisão as informações obtidas por suas consultas e o conhecimento do jogo (regras) que você deverá colocar no programa.





